{
  "guild": {
    "id": "291054398077927425",
    "name": "swift-developers-japan",
    "iconUrl": "https://cdn.discordapp.com/icons/291054398077927425/6737443b79da7dc8d5152980c8385ffb.png?size=512"
  },
  "channel": {
    "id": "601681406149787648",
    "type": "GuildTextChat",
    "categoryId": "492690973852172289",
    "category": "main",
    "name": "architecture",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2024-03-16T15:08:33.8849711+00:00",
  "messages": [
    {
      "id": "601683176850718752",
      "type": "Default",
      "timestamp": "2019-07-19T07:54:08.094+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "MVVM/MVPの話題で「1つのViewControllerにつき1つのプレゼンター（ViewModel/Presenter）」にしたい/したくない、みたいな話で意見があれば聞きたいと思ってます。ちなみに私は1:1にしたくないと思っていて、その理由は保守性の観点で複雑な画面に応じて複雑なプレセンターを作ってしまうと保守運用が大変だから、という気持ちです",
      "author": {
        "id": "303853379707338754",
        "name": "yimajo",
        "discriminator": "0000",
        "nickname": "yimajo",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "601693462286434314",
      "type": "Default",
      "timestamp": "2019-07-19T08:35:00.333+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "1:1にしたい理由を推測すると、画面仕様を把握する際に、ViewModel/Presenterに画面に必要なロジックの呼び出しが一つにまとまっているという利点があるるんじゃないかと想像しています。",
      "author": {
        "id": "303853379707338754",
        "name": "yimajo",
        "discriminator": "0000",
        "nickname": "yimajo",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "601693703379353620",
      "type": "Default",
      "timestamp": "2019-07-19T08:35:57.814+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "1:1にして、階層化して子供のViewModel/Presenter作りたいというのも上の理由かなと想像してます",
      "author": {
        "id": "303853379707338754",
        "name": "yimajo",
        "discriminator": "0000",
        "nickname": "yimajo",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "601694903298293761",
      "type": "Default",
      "timestamp": "2019-07-19T08:40:43.897+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "これダミーの画面みたいのを用意してそれについて話すともっと具体的かもしれませんね...",
      "author": {
        "id": "303853379707338754",
        "name": "yimajo",
        "discriminator": "0000",
        "nickname": "yimajo",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "601711351177674752",
      "type": "Default",
      "timestamp": "2019-07-19T09:46:05.377+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@yimajo さんの「1:1にしたくない」は、「1:nでもいい」ということですよね？「n:1でもいい」ではなくて。",
      "author": {
        "id": "338302215078936576",
        "name": "hironytic",
        "discriminator": "0000",
        "nickname": "hironytic",
        "color": "#F1C40F",
        "isBot": false,
        "roles": [
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/338302215078936576/2f0f5d2880a9a7bdc037652fbade2e9a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "303853379707338754",
          "name": "yimajo",
          "discriminator": "0000",
          "nickname": "yimajo",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
        }
      ]
    },
    {
      "id": "601712165862244353",
      "type": "Default",
      "timestamp": "2019-07-19T09:49:19.613+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "ぼくはMVVMを、UIと切り離してテストを書けるという点が大きなメリットだと考えていて、その観点では、ViewControllerとViewModelは表裏一体と思っていたので、1:1以外をあまり考えたことがなかったです。",
      "author": {
        "id": "338302215078936576",
        "name": "hironytic",
        "discriminator": "0000",
        "nickname": "hironytic",
        "color": "#F1C40F",
        "isBot": false,
        "roles": [
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/338302215078936576/2f0f5d2880a9a7bdc037652fbade2e9a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "601712574467407872",
      "type": "Default",
      "timestamp": "2019-07-19T09:50:57.032+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "でも、1つのViewControllerにn個のViewModelがあったとして、それらViewModel間で特に状態やデータのフローがないのなら、1:nでもぼくの目的（UIと切り離してテストが書ける）は果たせるなと思いました。",
      "author": {
        "id": "338302215078936576",
        "name": "hironytic",
        "discriminator": "0000",
        "nickname": "hironytic",
        "color": "#F1C40F",
        "isBot": false,
        "roles": [
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/338302215078936576/2f0f5d2880a9a7bdc037652fbade2e9a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "601738165388050432",
      "type": "Default",
      "timestamp": "2019-07-19T11:32:38.383+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "はい。そうです。 > 「1:1にしたくない」は、「1:nでもいい」ということですよね？",
      "author": {
        "id": "303853379707338754",
        "name": "yimajo",
        "discriminator": "0000",
        "nickname": "yimajo",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "601744038936444938",
      "type": "Default",
      "timestamp": "2019-07-19T11:55:58.746+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "（共通する）状態やデータフローがない、っていう表現は良さそうですね。関連性があるなしの定義のひとつとして明確に示せそうです",
      "author": {
        "id": "303853379707338754",
        "name": "yimajo",
        "discriminator": "0000",
        "nickname": "yimajo",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "610826847231541268",
      "type": "Default",
      "timestamp": "2019-08-13T13:27:48.994+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@yimajo  MVVMだとVに対するVMなのでVCを一つのVとして取り扱うかということになると思います。私はVCはVではないと考えているので、VMは複数存在しうると考えています。ただ、VCに対してVMが存在するのではないので1:nという表現がしっくりきません。\nMVPではないですがVIPERではPresenterに対するVの役はVCが担うと設計されているようで、その場合はPとVC（実際はV）は1:1だと思います。\nつまりそのアーキテクチャにおいてVCはVであるかで判断されるように思います。",
      "author": {
        "id": "294030912793083905",
        "name": "rizumita",
        "discriminator": "0000",
        "nickname": "rizumita",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/294030912793083905/2e52bc9b7745a5da45adca161d7ba7bc.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": [
        {
          "id": "303853379707338754",
          "name": "yimajo",
          "discriminator": "0000",
          "nickname": "yimajo",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
        }
      ]
    },
    {
      "id": "613705992143896597",
      "type": "Default",
      "timestamp": "2019-08-21T12:08:30.633+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "SwiftUIでアプリを開発されてる方、アーキテクチャパターンは何か採用されてますか？",
      "author": {
        "id": "294030912793083905",
        "name": "rizumita",
        "discriminator": "0000",
        "nickname": "rizumita",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/294030912793083905/2e52bc9b7745a5da45adca161d7ba7bc.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "613707150476312577",
      "type": "Default",
      "timestamp": "2019-08-21T12:13:06.801+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "UIKitでは基本はMVCですが、SwiftUIで素の状態（？）はなんと呼べば良いのでしょうか。Document-Viewパターンっぽさもありますが、ちょっと違いますよね。",
      "author": {
        "id": "294030912793083905",
        "name": "rizumita",
        "discriminator": "0000",
        "nickname": "rizumita",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/294030912793083905/2e52bc9b7745a5da45adca161d7ba7bc.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "699877492189823016",
      "type": "Default",
      "timestamp": "2020-04-15T07:03:17.233+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "@rizumita  コメントありがとうございます。Discordすごく久しぶりに開いてメンションされてるのに気が付きました。そういえば最近だと私もVIPERだと一つのViewにつきPresenter 1つでやってました。",
      "author": {
        "id": "303853379707338754",
        "name": "yimajo",
        "discriminator": "0000",
        "nickname": "yimajo",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/303853379707338754/1dd9957026e9f632a8d362e573e1ccc7.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC40",
            "code": "eyes",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f440.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "189711109966659584",
              "name": "omochimetaru",
              "discriminator": "0000",
              "nickname": "omochimetaru",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/189711109966659584/95280765d1be73ce985dce15ea3585f6.png?size=512"
            }
          ]
        }
      ],
      "mentions": [
        {
          "id": "294030912793083905",
          "name": "rizumita",
          "discriminator": "0000",
          "nickname": "rizumita",
          "color": null,
          "isBot": false,
          "roles": [],
          "avatarUrl": "https://cdn.discordapp.com/avatars/294030912793083905/2e52bc9b7745a5da45adca161d7ba7bc.png?size=512"
        }
      ]
    },
    {
      "id": "745465067084054669",
      "type": "Default",
      "timestamp": "2020-08-19T02:12:02.064+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "VIPER初心者です。質問させてください。\n\nAViewがもっている状態を、別のBViewで発火したイベントで使いたい場合があると思うのですが、BViewPresenterにAViewの弱参照をもたせるのがセオリーなんでしょうか？\n\nPresenterの責務は「ユーザーの操作やイベントを受け付けてInteractorにビジネスロジックの依頼をし、Viewに描画指示をする」だと理解しています。\n\nそのため、単にViewの状態を取得するということをPresenterが行ってもよいのか気になっています。\n\n他によい設計があれば教えていただけないでしょうか。",
      "author": {
        "id": "711190952403927141",
        "name": "nishitaku_dev",
        "discriminator": "0000",
        "nickname": "nishitaku",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/711190952403927141/2063716c69305d0b09c6bee5b99eef57.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "745470100806566018",
      "type": "Default",
      "timestamp": "2020-08-19T02:32:02.197+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "VIPERはくわしくないですが（ Clean Architecture の派生ということからの推測で話すと）、依存の方向は View から Presenter なので、 Presenter が View を持っているのはおかしくないでしょうか。プロトコルを介して保持しているということでしょうか？\n\nあと、「AViewがもっている状態を、別のBViewで発火したイベントで使いたい」については、この「状態」は Entity や Interactor が持っているべきものではないですか？\n\n間違っていたらすみません。",
      "author": {
        "id": "293624673265123328",
        "name": "koher",
        "discriminator": "0000",
        "nickname": "koher",
        "color": "#11806A",
        "isBot": false,
        "roles": [
          {
            "id": "703080262107529226",
            "name": "event-ops",
            "color": "#11806A",
            "position": 21
          },
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          },
          {
            "id": "658479157700722709",
            "name": "Server Booster",
            "color": "#F47FFF",
            "position": 14
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/293624673265123328/accd07acc220a18568ba46a6e9ede18a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "745472591736602787",
      "type": "Default",
      "timestamp": "2020-08-19T02:41:56.081+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "> Presenter が View を持っているのはおかしくないでしょうか。プロトコルを介して保持しているということでしょうか？\n私の説明不足ですいません。仰る通り、プロトコルを介して保持しています。\n\n> この「状態」は Entity や Interactor が持っているべきものではないですか？\nそこもよく理解できていません。\nDatabaseやUserDefaultに永続化するデータはEntityとしてInteractorから保存/取得するものだと理解しています。\nただメモリ上にもっておきたいだけのデータ、例えばラジオボタンのように、どのViewが選択されている、といった状態もInteractorから保存/取得すべきなのでしょうか。",
      "author": {
        "id": "711190952403927141",
        "name": "nishitaku_dev",
        "discriminator": "0000",
        "nickname": "nishitaku",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/711190952403927141/2063716c69305d0b09c6bee5b99eef57.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "745475202858745924",
      "type": "Default",
      "timestamp": "2020-08-19T02:52:18.621+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "通常のラジオボタンであれば、たとえば送信ボタンが押されるまでは選択されても特にイベントを通知せず、送信ボタンが押されるというイベントによって初めてどれが選択されているかという情報が通知されるのではないでしょうか。",
      "author": {
        "id": "293624673265123328",
        "name": "koher",
        "discriminator": "0000",
        "nickname": "koher",
        "color": "#11806A",
        "isBot": false,
        "roles": [
          {
            "id": "703080262107529226",
            "name": "event-ops",
            "color": "#11806A",
            "position": 21
          },
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          },
          {
            "id": "658479157700722709",
            "name": "Server Booster",
            "color": "#F47FFF",
            "position": 14
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/293624673265123328/accd07acc220a18568ba46a6e9ede18a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "745475422208131423",
      "type": "Default",
      "timestamp": "2020-08-19T02:53:10.918+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "しかし、もしラジオボタンの選択によって動的に状態が変更されるようなものであれば、ラジオボタンの選択をイベントとして通知し、 Interactor がそれによって状態を更新するように思います。",
      "author": {
        "id": "293624673265123328",
        "name": "koher",
        "discriminator": "0000",
        "nickname": "koher",
        "color": "#11806A",
        "isBot": false,
        "roles": [
          {
            "id": "703080262107529226",
            "name": "event-ops",
            "color": "#11806A",
            "position": 21
          },
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          },
          {
            "id": "658479157700722709",
            "name": "Server Booster",
            "color": "#F47FFF",
            "position": 14
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/293624673265123328/accd07acc220a18568ba46a6e9ede18a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "745477798910754887",
      "type": "Default",
      "timestamp": "2020-08-19T03:02:37.568+00:00",
      "timestampEdited": "2020-08-19T03:10:08.094+00:00",
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "> Interactor がそれによって状態を更新するように思います。\nなるほど。理解できてきました。\nView内部で閉じる状態変更であれば、Viewの中で状態管理すればよくて、他のViewへ影響がある状態変更の場合は、別のところで状態管理した方がいい、ということですね。\n\nこの状態をどこにもたせるかを考えた場合、iOSで気軽に使える共通メモリ領域はUserDefaultsになるのでしょうか？",
      "author": {
        "id": "711190952403927141",
        "name": "nishitaku_dev",
        "discriminator": "0000",
        "nickname": "nishitaku",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/711190952403927141/2063716c69305d0b09c6bee5b99eef57.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "745481766109970533",
      "type": "Default",
      "timestamp": "2020-08-19T03:18:23.422+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "UserDefaultsに保存すると永続化されてしまうので、今やりたいことと違う気がします。",
      "author": {
        "id": "293624673265123328",
        "name": "koher",
        "discriminator": "0000",
        "nickname": "koher",
        "color": "#11806A",
        "isBot": false,
        "roles": [
          {
            "id": "703080262107529226",
            "name": "event-ops",
            "color": "#11806A",
            "position": 21
          },
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          },
          {
            "id": "658479157700722709",
            "name": "Server Booster",
            "color": "#F47FFF",
            "position": 14
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/293624673265123328/accd07acc220a18568ba46a6e9ede18a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "745482305145012324",
      "type": "Default",
      "timestamp": "2020-08-19T03:20:31.938+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Interactor がプロパティとして保持するとかでしょうか。",
      "author": {
        "id": "293624673265123328",
        "name": "koher",
        "discriminator": "0000",
        "nickname": "koher",
        "color": "#11806A",
        "isBot": false,
        "roles": [
          {
            "id": "703080262107529226",
            "name": "event-ops",
            "color": "#11806A",
            "position": 21
          },
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          },
          {
            "id": "658479157700722709",
            "name": "Server Booster",
            "color": "#F47FFF",
            "position": 14
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/293624673265123328/accd07acc220a18568ba46a6e9ede18a.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "745482986866212955",
      "type": "Default",
      "timestamp": "2020-08-19T03:23:14.473+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "それで十分そうです。\nありがとうございます。",
      "author": {
        "id": "711190952403927141",
        "name": "nishitaku_dev",
        "discriminator": "0000",
        "nickname": "nishitaku",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/711190952403927141/2063716c69305d0b09c6bee5b99eef57.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDE42",
            "code": "slight_smile",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f642.svg"
          },
          "count": 1,
          "users": [
            {
              "id": "293624673265123328",
              "name": "koher",
              "discriminator": "0000",
              "nickname": "koher",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/293624673265123328/accd07acc220a18568ba46a6e9ede18a.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    },
    {
      "id": "754555287301652521",
      "type": "Default",
      "timestamp": "2020-09-13T04:13:19.452+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "viperに関して質問です。\n\nInteractorは各Viewと１対１になるわけではないということですが、一つのViewがIntercatorを複数持つというので構わないのでしょうか。\n\nDIする時に、多くのIntercatorを持たせるみたいな形式になるのが違和感があるのですが。",
      "author": {
        "id": "575586159212757029",
        "name": "k063602",
        "discriminator": "0000",
        "nickname": "k06",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/2.png"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "754866859387387934",
      "type": "Default",
      "timestamp": "2020-09-14T00:51:24.026+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Interactorはビジネスロジックを担当しているので、その分割単位は必ずしもViewの分割単位と一致しないと思ってます。\n\nなので、View : Interactor = 1 : Nになっても問題ないと理解しています。",
      "author": {
        "id": "711190952403927141",
        "name": "nishitaku_dev",
        "discriminator": "0000",
        "nickname": "nishitaku",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/avatars/711190952403927141/2063716c69305d0b09c6bee5b99eef57.png?size=512"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "756673110727589918",
      "type": "Default",
      "timestamp": "2020-09-19T00:28:47.904+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "なるほど、ありがとうございます。\n共通で使うメソッドがある場合、Intercatorを使い回すというイメージなんですね。\n結構、細分化するようになりそうで、なかなかファイル数が膨大になりそうです、、。",
      "author": {
        "id": "575586159212757029",
        "name": "k063602",
        "discriminator": "0000",
        "nickname": "k06",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/2.png"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "812692010061529108",
      "type": "Default",
      "timestamp": "2021-02-20T14:27:54.286+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "SwiftUI向けのアーキテクチャを考案してみました（アーキテクチャどんどん出過ぎw\nhttps://github.com/el-hoshino/ViDRep-Sample",
      "author": {
        "id": "332734073565085699",
        "name": "el_hoshino",
        "discriminator": "0000",
        "nickname": "lovee",
        "color": "#F1C40F",
        "isBot": false,
        "roles": [
          {
            "id": "453733144961744943",
            "name": "apple-dev",
            "color": "#F1C40F",
            "position": 15
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/332734073565085699/92ec1c503bdfd8d5cd49c92bbb38c7ab.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "el-hoshino/ViDRep-Sample",
          "url": "https://github.com/el-hoshino/ViDRep-Sample",
          "timestamp": null,
          "description": "ViDRep is an experimental architecture designed for SwiftUI. This is a sample project to show how to build an app using ViDRep  - el-hoshino/ViDRep-Sample",
          "color": "#1E2327",
          "thumbnail": {
            "url": "https://images-ext-2.discordapp.net/external/arvb1U-1mAUDVKk85BejxdCMMqYJ7E-feKQNFY5qyo0/%3Fs%3D400%26v%3D4/https/avatars.githubusercontent.com/u/3942121",
            "width": 400,
            "height": 400
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [
        {
          "emoji": {
            "id": "",
            "name": "\uD83D\uDC4D",
            "code": "thumbsup",
            "isAnimated": false,
            "imageUrl": "https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f44d.svg"
          },
          "count": 8,
          "users": [
            {
              "id": "286880615792508930",
              "name": "tessy0901",
              "discriminator": "0000",
              "nickname": "tessy0901",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/286880615792508930/b766f2c4d8f22cf5015f8171667610a7.png?size=512"
            },
            {
              "id": "294097852345483264",
              "name": "murakammmmm",
              "discriminator": "0000",
              "nickname": "murakammmmm",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/5.png"
            },
            {
              "id": "411129094366035968",
              "name": "criptab8462",
              "discriminator": "0000",
              "nickname": "criptab",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/embed/avatars/4.png"
            },
            {
              "id": "469077767107903488",
              "name": "kok.i",
              "discriminator": "0000",
              "nickname": "koki",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/469077767107903488/b93a818255f3271179b80ee8a42132ab.png?size=512"
            },
            {
              "id": "534761321649143818",
              "name": "qazwsxp",
              "discriminator": "0000",
              "nickname": "qazwsxp",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/534761321649143818/61681bb127839445d6535435fd807ba2.png?size=512"
            },
            {
              "id": "678235952254156803",
              "name": "shoheiyamamoto",
              "discriminator": "0000",
              "nickname": "Shohei Yamamoto",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/678235952254156803/329efd3f3e0885c3d850f0ea0278a937.png?size=512"
            },
            {
              "id": "744053481761144863",
              "name": "usaku_1217",
              "discriminator": "0000",
              "nickname": "usaku_1217",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/744053481761144863/6e0ae5725ae003d3ba6c07e9ff5ee256.png?size=512"
            },
            {
              "id": "890113820381577216",
              "name": "ktombow",
              "discriminator": "0000",
              "nickname": "とんとんぼ#0547",
              "isBot": false,
              "avatarUrl": "https://cdn.discordapp.com/avatars/890113820381577216/cd1b30ecd44af419e7db500b200b94d9.png?size=512"
            }
          ]
        }
      ],
      "mentions": []
    }
  ],
  "messageCount": 26
}